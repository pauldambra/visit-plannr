{
  "service": {
    "service": "visit-plannr",
    "serviceObject": {
      "name": "visit-plannr"
    },
    "provider": {
      "stage": "dev",
      "variableSyntax": "\\${([ ~:a-zA-Z0-9._@'\",\\-\\/\\(\\)*?]+?)}",
      "name": "aws",
      "runtime": "nodejs12.x",
      "memorySize": 512,
      "timeout": 10,
      "environment": {
        "EVENTS_TABLE": "something_dynamic_here"
      },
      "tracing": {
        "apiGateway": true,
        "lambda": true
      },
      "iamRoleStatements": [
        {
          "Effect": "Allow",
          "Action": "... - xray:PutTraceSegments - xray:PutTelemetryRecords",
          "Resource": "*"
        }
      ],
      "region": "eu-west-1",
      "versionFunctions": true,
      "remoteFunctionData": null,
      "compiledCloudFormationTemplate": {
        "AWSTemplateFormatVersion": "2010-09-09",
        "Description": "The AWS CloudFormation template for this Serverless application",
        "Resources": {
          "ServerlessDeploymentBucket": {
            "Type": "AWS::S3::Bucket",
            "Properties": {
              "BucketEncryption": {
                "ServerSideEncryptionConfiguration": [
                  {
                    "ServerSideEncryptionByDefault": {
                      "SSEAlgorithm": "AES256"
                    }
                  }
                ]
              }
            }
          },
          "ServerlessDeploymentBucketPolicy": {
            "Type": "AWS::S3::BucketPolicy",
            "Properties": {
              "Bucket": {
                "Ref": "ServerlessDeploymentBucket"
              },
              "PolicyDocument": {
                "Statement": [
                  {
                    "Action": "s3:*",
                    "Effect": "Deny",
                    "Principal": "*",
                    "Resource": [
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":s3:::",
                            {
                              "Ref": "ServerlessDeploymentBucket"
                            },
                            "/*"
                          ]
                        ]
                      }
                    ],
                    "Condition": {
                      "Bool": {
                        "aws:SecureTransport": false
                      }
                    }
                  }
                ]
              }
            }
          },
          "ProposeDestinationLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/visit-plannr-dev-ProposeDestination"
            }
          },
          "ValidateGeolocationLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/visit-plannr-dev-ValidateGeolocation"
            }
          },
          "UpdateDestinationReadModelLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/visit-plannr-dev-UpdateDestinationReadModel"
            }
          },
          "HomePageGeneratorLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/visit-plannr-dev-HomePageGenerator"
            }
          },
          "CloudFrontInvalidatingLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/visit-plannr-dev-CloudFrontInvalidating"
            }
          },
          "IamRoleLambdaExecution": {
            "Type": "AWS::IAM::Role",
            "Properties": {
              "AssumeRolePolicyDocument": {
                "Version": "2012-10-17",
                "Statement": [
                  {
                    "Effect": "Allow",
                    "Principal": {
                      "Service": [
                        "lambda.amazonaws.com"
                      ]
                    },
                    "Action": [
                      "sts:AssumeRole"
                    ]
                  }
                ]
              },
              "Policies": [
                {
                  "PolicyName": {
                    "Fn::Join": [
                      "-",
                      [
                        "dev",
                        "visit-plannr",
                        "lambda"
                      ]
                    ]
                  },
                  "PolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                      {
                        "Effect": "Allow",
                        "Action": [
                          "logs:CreateLogStream",
                          "logs:CreateLogGroup"
                        ],
                        "Resource": [
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/visit-plannr-dev*:*"
                          }
                        ]
                      },
                      {
                        "Effect": "Allow",
                        "Action": [
                          "logs:PutLogEvents"
                        ],
                        "Resource": [
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/visit-plannr-dev*:*:*"
                          }
                        ]
                      },
                      {
                        "$ref": "$[\"service\"][\"provider\"][\"iamRoleStatements\"][0]"
                      },
                      {
                        "Effect": "Allow",
                        "Action": [
                          "xray:PutTraceSegments",
                          "xray:PutTelemetryRecords"
                        ],
                        "Resource": [
                          "*"
                        ]
                      },
                      {
                        "Effect": "Allow",
                        "Action": [
                          "dynamodb:GetRecords",
                          "dynamodb:GetShardIterator",
                          "dynamodb:DescribeStream",
                          "dynamodb:ListStreams"
                        ],
                        "Resource": [
                          {
                            "Fn::GetAtt": [
                              "EventsTable",
                              "StreamArn"
                            ]
                          }
                        ]
                      },
                      {
                        "Effect": "Allow",
                        "Action": [
                          "dynamodb:GetRecords",
                          "dynamodb:GetShardIterator",
                          "dynamodb:DescribeStream",
                          "dynamodb:ListStreams"
                        ],
                        "Resource": [
                          {
                            "Fn::GetAtt": [
                              "EventsTable",
                              "StreamArn"
                            ]
                          }
                        ]
                      },
                      {
                        "Effect": "Allow",
                        "Action": [
                          "dynamodb:GetRecords",
                          "dynamodb:GetShardIterator",
                          "dynamodb:DescribeStream",
                          "dynamodb:ListStreams"
                        ],
                        "Resource": [
                          {
                            "Fn::GetAtt": [
                              "S3HomeBucket",
                              "Arn"
                            ]
                          }
                        ]
                      }
                    ]
                  }
                }
              ],
              "Path": "/",
              "RoleName": {
                "Fn::Join": [
                  "-",
                  [
                    "visit-plannr",
                    "dev",
                    {
                      "Ref": "AWS::Region"
                    },
                    "lambdaRole"
                  ]
                ]
              }
            }
          },
          "EnterpriseLogAccessIamRole": {
            "Type": "AWS::IAM::Role",
            "Properties": {
              "AssumeRolePolicyDocument": {
                "Version": "2012-10-17",
                "Statement": [
                  {
                    "Effect": "Allow",
                    "Principal": {
                      "AWS": "arn:aws:iam::802587217904:root"
                    },
                    "Action": "sts:AssumeRole",
                    "Condition": {
                      "StringEquals": {
                        "sts:ExternalId": "ServerlessEnterprise-SXBNJP59BmjtB5p3gb"
                      }
                    }
                  }
                ]
              },
              "Policies": [
                {
                  "PolicyName": "LogFilterAccess",
                  "PolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                      {
                        "Effect": "Allow",
                        "Action": [
                          "logs:FilterLogEvents"
                        ],
                        "Resource": [
                          {
                            "Fn::GetAtt": [
                              "ProposeDestinationLogGroup",
                              "Arn"
                            ]
                          },
                          {
                            "Fn::GetAtt": [
                              "ValidateGeolocationLogGroup",
                              "Arn"
                            ]
                          },
                          {
                            "Fn::GetAtt": [
                              "UpdateDestinationReadModelLogGroup",
                              "Arn"
                            ]
                          },
                          {
                            "Fn::GetAtt": [
                              "HomePageGeneratorLogGroup",
                              "Arn"
                            ]
                          },
                          {
                            "Fn::GetAtt": [
                              "CloudFrontInvalidatingLogGroup",
                              "Arn"
                            ]
                          }
                        ]
                      }
                    ]
                  }
                }
              ]
            }
          },
          "ProposeDestinationLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/visit-plannr/dev/1580683456370-2020-02-02T22:44:16.370Z/visit-plannr.zip"
              },
              "FunctionName": "visit-plannr-dev-ProposeDestination",
              "Handler": "s_ProposeDestination.handler",
              "MemorySize": 512,
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              },
              "Runtime": "nodejs12.x",
              "Timeout": 10,
              "TracingConfig": {
                "Mode": "Active"
              },
              "Environment": {
                "Variables": {
                  "EVENTS_TABLE": "something_dynamic_here"
                }
              }
            },
            "DependsOn": [
              "ProposeDestinationLogGroup",
              "IamRoleLambdaExecution"
            ]
          },
          "ProposeDestinationLambdaVersionyptfUaJcPzDGYNZjvGm9q1UleyY8VVZKViAvFAKKw": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "ProposeDestinationLambdaFunction"
              },
              "CodeSha256": "/VJus+7i0gM2sQ8kre+7Pmr5i6fCTQYirKX7g3LX/js="
            }
          },
          "ValidateGeolocationLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/visit-plannr/dev/1580683456370-2020-02-02T22:44:16.370Z/visit-plannr.zip"
              },
              "FunctionName": "visit-plannr-dev-ValidateGeolocation",
              "Handler": "s_ValidateGeolocation.handler",
              "MemorySize": 512,
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              },
              "Runtime": "nodejs12.x",
              "Timeout": 10,
              "TracingConfig": {
                "Mode": "Active"
              },
              "Environment": {
                "Variables": {
                  "EVENTS_TABLE": "something_dynamic_here"
                }
              }
            },
            "DependsOn": [
              "ValidateGeolocationLogGroup",
              "IamRoleLambdaExecution"
            ]
          },
          "ValidateGeolocationLambdaVersionfF1nYRIdG6W6QhOvzDlepElLGR7J0PZowjltblxAA8": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "ValidateGeolocationLambdaFunction"
              },
              "CodeSha256": "/VJus+7i0gM2sQ8kre+7Pmr5i6fCTQYirKX7g3LX/js="
            }
          },
          "UpdateDestinationReadModelLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/visit-plannr/dev/1580683456370-2020-02-02T22:44:16.370Z/visit-plannr.zip"
              },
              "FunctionName": "visit-plannr-dev-UpdateDestinationReadModel",
              "Handler": "s_UpdateDestinationReadModel.handler",
              "MemorySize": 512,
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              },
              "Runtime": "nodejs12.x",
              "Timeout": 10,
              "TracingConfig": {
                "Mode": "Active"
              },
              "Environment": {
                "Variables": {
                  "EVENTS_TABLE": "something_dynamic_here"
                }
              }
            },
            "DependsOn": [
              "UpdateDestinationReadModelLogGroup",
              "IamRoleLambdaExecution"
            ]
          },
          "UpdateDestinationReadModelLambdaVersionTOkheHPnvyWY69qgr1JnN4BP4D8XaiLzjtA3OUuDaI": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "UpdateDestinationReadModelLambdaFunction"
              },
              "CodeSha256": "/VJus+7i0gM2sQ8kre+7Pmr5i6fCTQYirKX7g3LX/js="
            }
          },
          "HomePageGeneratorLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/visit-plannr/dev/1580683456370-2020-02-02T22:44:16.370Z/visit-plannr.zip"
              },
              "FunctionName": "visit-plannr-dev-HomePageGenerator",
              "Handler": "s_HomePageGenerator.handler",
              "MemorySize": 512,
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              },
              "Runtime": "nodejs12.x",
              "Timeout": 10,
              "TracingConfig": {
                "Mode": "Active"
              },
              "Environment": {
                "Variables": {
                  "EVENTS_TABLE": "something_dynamic_here"
                }
              }
            },
            "DependsOn": [
              "HomePageGeneratorLogGroup",
              "IamRoleLambdaExecution"
            ]
          },
          "HomePageGeneratorLambdaVersion1zSudBAFWdQJLBXLXWnAt6jrAPA9AXBZr7je1GfJvnA": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "HomePageGeneratorLambdaFunction"
              },
              "CodeSha256": "/VJus+7i0gM2sQ8kre+7Pmr5i6fCTQYirKX7g3LX/js="
            }
          },
          "CloudFrontInvalidatingLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/visit-plannr/dev/1580683456370-2020-02-02T22:44:16.370Z/visit-plannr.zip"
              },
              "FunctionName": "visit-plannr-dev-CloudFrontInvalidating",
              "Handler": "s_CloudFrontInvalidating.handler",
              "MemorySize": 512,
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              },
              "Runtime": "nodejs12.x",
              "Timeout": 10,
              "TracingConfig": {
                "Mode": "Active"
              },
              "Environment": {
                "Variables": {
                  "EVENTS_TABLE": "something_dynamic_here"
                }
              }
            },
            "DependsOn": [
              "CloudFrontInvalidatingLogGroup",
              "IamRoleLambdaExecution"
            ]
          },
          "CloudFrontInvalidatingLambdaVersionklBOJVQtxBoYvWDWyPYwqPvPWdykPGIZsM0a9JtU2W0": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "CloudFrontInvalidatingLambdaFunction"
              },
              "CodeSha256": "/VJus+7i0gM2sQ8kre+7Pmr5i6fCTQYirKX7g3LX/js="
            }
          },
          "S3BucketVisitplannrsitehome": {
            "Type": "AWS::S3::Bucket",
            "Properties": {
              "BucketName": "visitplannr-site-home",
              "NotificationConfiguration": {
                "LambdaConfigurations": [
                  {
                    "Event": "s3:ObjectCreated:*",
                    "Function": {
                      "Fn::GetAtt": [
                        "CloudFrontInvalidatingLambdaFunction",
                        "Arn"
                      ]
                    }
                  },
                  {
                    "Event": "s3:ObjectRemoved:*",
                    "Function": {
                      "Fn::GetAtt": [
                        "CloudFrontInvalidatingLambdaFunction",
                        "Arn"
                      ]
                    }
                  }
                ]
              }
            },
            "DependsOn": [
              "CloudFrontInvalidatingLambdaPermissionVisitplannrsitehomeS3",
              "CloudFrontInvalidatingLambdaPermissionVisitplannrsitehomeS3"
            ]
          },
          "CloudFrontInvalidatingLambdaPermissionVisitplannrsitehomeS3": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "CloudFrontInvalidatingLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "s3.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":s3:::visitplannr-site-home"
                  ]
                ]
              }
            }
          },
          "ApiGatewayRestApi": {
            "Type": "AWS::ApiGateway::RestApi",
            "Properties": {
              "Name": "dev-visit-plannr",
              "EndpointConfiguration": {
                "Types": [
                  "EDGE"
                ]
              },
              "Policy": ""
            }
          },
          "ApiGatewayResourceDestination": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Fn::GetAtt": [
                  "ApiGatewayRestApi",
                  "RootResourceId"
                ]
              },
              "PathPart": "destination",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayMethodDestinationPost": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "POST",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourceDestination"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "ProposeDestinationLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            }
          },
          "ApiGatewayDeployment1580683436091": {
            "Type": "AWS::ApiGateway::Deployment",
            "Properties": {
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "StageName": "dev"
            },
            "DependsOn": [
              "ApiGatewayMethodDestinationPost"
            ]
          },
          "ProposeDestinationLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "ProposeDestinationLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          },
          "ApiGatewayLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/api-gateway/visit-plannr-dev"
            }
          },
          "CustomApiGatewayAccountCloudWatchRole": {
            "Type": "Custom::ApiGatewayAccountRole",
            "Version": 1,
            "Properties": {
              "ServiceToken": {
                "Fn::GetAtt": [
                  "CustomDashresourceDashapigwDashcwDashroleLambdaFunction",
                  "Arn"
                ]
              }
            }
          },
          "IamRoleCustomResourcesLambdaExecution": {
            "Type": "AWS::IAM::Role",
            "Properties": {
              "AssumeRolePolicyDocument": {
                "Version": "2012-10-17",
                "Statement": [
                  {
                    "Effect": "Allow",
                    "Principal": {
                      "Service": [
                        "lambda.amazonaws.com"
                      ]
                    },
                    "Action": [
                      "sts:AssumeRole"
                    ]
                  }
                ]
              },
              "Policies": [
                {
                  "PolicyName": {
                    "Fn::Join": [
                      "-",
                      [
                        "dev",
                        "visit-plannr",
                        "custom-resources-lambda"
                      ]
                    ]
                  },
                  "PolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                      {
                        "Effect": "Allow",
                        "Resource": {
                          "Fn::Join": [
                            ":",
                            [
                              "arn",
                              {
                                "Ref": "AWS::Partition"
                              },
                              "iam:",
                              {
                                "Ref": "AWS::AccountId"
                              },
                              "role/*"
                            ]
                          ]
                        },
                        "Action": [
                          "iam:AttachRolePolicy",
                          "iam:CreateRole",
                          "iam:ListAttachedRolePolicies",
                          "iam:PassRole"
                        ]
                      },
                      {
                        "Effect": "Allow",
                        "Resource": {
                          "Fn::Join": [
                            ":",
                            [
                              "arn",
                              {
                                "Ref": "AWS::Partition"
                              },
                              "apigateway:*::/account"
                            ]
                          ]
                        },
                        "Action": [
                          "apigateway:GET",
                          "apigateway:PATCH"
                        ]
                      }
                    ]
                  }
                }
              ]
            }
          },
          "CustomDashresourceDashapigwDashcwDashroleLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/visit-plannr/dev/1580683456370-2020-02-02T22:44:16.370Z/custom-resources.zip"
              },
              "FunctionName": "visit-plannr-dev-custom-resource-apigw-cw-role",
              "Handler": "apiGatewayCloudWatchRole/handler.handler",
              "MemorySize": 1024,
              "Runtime": "nodejs12.x",
              "Timeout": 180,
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleCustomResourcesLambdaExecution",
                  "Arn"
                ]
              }
            },
            "DependsOn": [
              "IamRoleCustomResourcesLambdaExecution"
            ]
          },
          "ValidateGeolocationEventSourceMappingDynamodbEventsTable": {
            "Type": "AWS::Lambda::EventSourceMapping",
            "DependsOn": "IamRoleLambdaExecution",
            "Properties": {
              "BatchSize": 10,
              "EventSourceArn": {
                "Fn::GetAtt": [
                  "EventsTable",
                  "StreamArn"
                ]
              },
              "FunctionName": {
                "Fn::GetAtt": [
                  "ValidateGeolocationLambdaFunction",
                  "Arn"
                ]
              },
              "StartingPosition": "TRIM_HORIZON",
              "Enabled": "True"
            }
          },
          "UpdateDestinationReadModelEventSourceMappingDynamodbEventsTable": {
            "Type": "AWS::Lambda::EventSourceMapping",
            "DependsOn": "IamRoleLambdaExecution",
            "Properties": {
              "BatchSize": 10,
              "EventSourceArn": {
                "Fn::GetAtt": [
                  "EventsTable",
                  "StreamArn"
                ]
              },
              "FunctionName": {
                "Fn::GetAtt": [
                  "UpdateDestinationReadModelLambdaFunction",
                  "Arn"
                ]
              },
              "StartingPosition": "TRIM_HORIZON",
              "Enabled": "True"
            }
          },
          "HomePageGeneratorEventSourceMappingDynamodbS3HomeBucket": {
            "Type": "AWS::Lambda::EventSourceMapping",
            "DependsOn": "IamRoleLambdaExecution",
            "Properties": {
              "BatchSize": 10,
              "EventSourceArn": {
                "Fn::GetAtt": [
                  "S3HomeBucket",
                  "Arn"
                ]
              },
              "FunctionName": {
                "Fn::GetAtt": [
                  "HomePageGeneratorLambdaFunction",
                  "Arn"
                ]
              },
              "StartingPosition": "TRIM_HORIZON",
              "Enabled": "True"
            }
          },
          "EventsTable": {
            "Type": "AWS::DynamoDB::Table",
            "Properties": {
              "AttributeDefinitions": [
                {
                  "AttributeName": "StreamName",
                  "AttributeType": "S"
                },
                {
                  "AttributeName": "timestamp",
                  "AttributeType": "S"
                }
              ],
              "KeySchema": [
                {
                  "AttributeName": "StreamName",
                  "KeyType": "HASH"
                },
                {
                  "AttributeName": "timestamp",
                  "KeyType": "RANGE"
                }
              ],
              "BillingMode": "PAY_PER_REQUEST",
              "StreamSpecification": {
                "StreamViewType": "NEW_IMAGE"
              }
            }
          },
          "ReadModelTable": {
            "Type": "AWS::DynamoDB::Table",
            "Properties": {
              "AttributeDefinitions": [
                {
                  "AttributeName": "type",
                  "AttributeType": "S"
                },
                {
                  "AttributeName": "timestamp",
                  "AttributeType": "S"
                }
              ],
              "KeySchema": [
                {
                  "AttributeName": "type",
                  "KeyType": "HASH"
                },
                {
                  "AttributeName": "timestamp",
                  "KeyType": "RANGE"
                }
              ],
              "BillingMode": "PAY_PER_REQUEST",
              "StreamSpecification": {
                "StreamViewType": "NEW_IMAGE"
              }
            }
          },
          "S3HomeBucket": {
            "Type": "AWS::S3::Bucket",
            "Properties": {
              "AccessControl": "PublicRead",
              "BucketName": "visitplannr-site-home",
              "WebsiteConfiguration": {
                "IndexDocument": "index.html",
                "ErrorDocument": "index.html"
              }
            },
            "DeletionPolicy": "Retain"
          },
          "BucketPolicy": {
            "Type": "AWS::S3::BucketPolicy",
            "Properties": {
              "PolicyDocument": {
                "Id": "S3HomeBucketPolicy",
                "Version": "2012-10-17T00:00:00.000Z",
                "Statement": [
                  {
                    "Sid": "PublicReadGetObject",
                    "Effect": "Allow",
                    "Principal": "*",
                    "Action": [
                      "s3:GetObject"
                    ],
                    "Resource": "arn:aws:s3:::visitplannr-site-home/*"
                  }
                ]
              },
              "Bucket": {
                "Ref": "S3HomeBucket"
              }
            }
          },
          "WebAppCloudFrontDistribution": {
            "Type": "AWS::CloudFront::Distribution",
            "Properties": {
              "DistributionConfig": {
                "Origins": [
                  {
                    "DomainName": "visitplannr-site-home.s3.amazonaws.com",
                    "Id": "WebApp",
                    "CustomOriginConfig": {
                      "HTTPPort": 80,
                      "HTTPSPort": 443,
                      "OriginProtocolPolicy": "https-only"
                    }
                  }
                ],
                "Enabled": "true",
                "DefaultRootObject": "index.html",
                "CustomErrorResponses": [
                  {
                    "ErrorCode": 404,
                    "ResponseCode": 200,
                    "ResponsePagePath": "/index.html"
                  }
                ],
                "DefaultCacheBehavior": {
                  "AllowedMethods": [
                    "GET",
                    "HEAD",
                    "OPTIONS"
                  ],
                  "TargetOriginId": "WebApp",
                  "ForwardedValues": {
                    "QueryString": "false",
                    "Cookies": {
                      "Forward": "none"
                    }
                  },
                  "ViewerProtocolPolicy": "redirect-to-https"
                },
                "ViewerCertificate": {
                  "CloudFrontDefaultCertificate": "true"
                }
              }
            }
          },
          "CloudWatchLogsSubscriptionFilterProposeDestinationLogGroup": {
            "Type": "AWS::Logs::SubscriptionFilter",
            "Properties": {
              "DestinationArn": "arn:aws:logs:eu-west-1:802587217904:destination:SXBNJP59BmjtB5p3gb#9Wwp3mDWlJHCGRtWwk#visit-plannr#dev",
              "FilterPattern": "?\"REPORT RequestId: \" ?\"SERVERLESS_ENTERPRISE\"",
              "LogGroupName": {
                "Ref": "ProposeDestinationLogGroup"
              }
            }
          },
          "CloudWatchLogsSubscriptionFilterValidateGeolocationLogGroup": {
            "Type": "AWS::Logs::SubscriptionFilter",
            "Properties": {
              "DestinationArn": "arn:aws:logs:eu-west-1:802587217904:destination:SXBNJP59BmjtB5p3gb#9Wwp3mDWlJHCGRtWwk#visit-plannr#dev",
              "FilterPattern": "?\"REPORT RequestId: \" ?\"SERVERLESS_ENTERPRISE\"",
              "LogGroupName": {
                "Ref": "ValidateGeolocationLogGroup"
              }
            }
          },
          "CloudWatchLogsSubscriptionFilterUpdateDestinationReadModelLogGroup": {
            "Type": "AWS::Logs::SubscriptionFilter",
            "Properties": {
              "DestinationArn": "arn:aws:logs:eu-west-1:802587217904:destination:SXBNJP59BmjtB5p3gb#9Wwp3mDWlJHCGRtWwk#visit-plannr#dev",
              "FilterPattern": "?\"REPORT RequestId: \" ?\"SERVERLESS_ENTERPRISE\"",
              "LogGroupName": {
                "Ref": "UpdateDestinationReadModelLogGroup"
              }
            }
          },
          "CloudWatchLogsSubscriptionFilterHomePageGeneratorLogGroup": {
            "Type": "AWS::Logs::SubscriptionFilter",
            "Properties": {
              "DestinationArn": "arn:aws:logs:eu-west-1:802587217904:destination:SXBNJP59BmjtB5p3gb#9Wwp3mDWlJHCGRtWwk#visit-plannr#dev",
              "FilterPattern": "?\"REPORT RequestId: \" ?\"SERVERLESS_ENTERPRISE\"",
              "LogGroupName": {
                "Ref": "HomePageGeneratorLogGroup"
              }
            }
          },
          "CloudWatchLogsSubscriptionFilterCloudFrontInvalidatingLogGroup": {
            "Type": "AWS::Logs::SubscriptionFilter",
            "Properties": {
              "DestinationArn": "arn:aws:logs:eu-west-1:802587217904:destination:SXBNJP59BmjtB5p3gb#9Wwp3mDWlJHCGRtWwk#visit-plannr#dev",
              "FilterPattern": "?\"REPORT RequestId: \" ?\"SERVERLESS_ENTERPRISE\"",
              "LogGroupName": {
                "Ref": "CloudFrontInvalidatingLogGroup"
              }
            }
          },
          "CloudWatchLogsSubscriptionFilterApiGatewayLogGroup": {
            "Type": "AWS::Logs::SubscriptionFilter",
            "Properties": {
              "DestinationArn": "arn:aws:logs:eu-west-1:802587217904:destination:SXBNJP59BmjtB5p3gb#9Wwp3mDWlJHCGRtWwk#visit-plannr#dev",
              "FilterPattern": "\"SLS_ACCESS_LOG\"",
              "LogGroupName": {
                "Ref": "ApiGatewayLogGroup"
              }
            }
          }
        },
        "Outputs": {
          "ServerlessDeploymentBucketName": {
            "Value": {
              "Ref": "ServerlessDeploymentBucket"
            }
          },
          "EnterpriseLogAccessIamRole": {
            "Value": {
              "Fn::GetAtt": [
                "EnterpriseLogAccessIamRole",
                "Arn"
              ]
            }
          },
          "ProposeDestinationLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "ProposeDestinationLambdaVersionyptfUaJcPzDGYNZjvGm9q1UleyY8VVZKViAvFAKKw"
            }
          },
          "ValidateGeolocationLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "ValidateGeolocationLambdaVersionfF1nYRIdG6W6QhOvzDlepElLGR7J0PZowjltblxAA8"
            }
          },
          "UpdateDestinationReadModelLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "UpdateDestinationReadModelLambdaVersionTOkheHPnvyWY69qgr1JnN4BP4D8XaiLzjtA3OUuDaI"
            }
          },
          "HomePageGeneratorLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "HomePageGeneratorLambdaVersion1zSudBAFWdQJLBXLXWnAt6jrAPA9AXBZr7je1GfJvnA"
            }
          },
          "CloudFrontInvalidatingLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "CloudFrontInvalidatingLambdaVersionklBOJVQtxBoYvWDWyPYwqPvPWdykPGIZsM0a9JtU2W0"
            }
          },
          "ServiceEndpoint": {
            "Description": "URL of the service endpoint",
            "Value": {
              "Fn::Join": [
                "",
                [
                  "https://",
                  {
                    "Ref": "ApiGatewayRestApi"
                  },
                  ".execute-api.",
                  {
                    "Ref": "AWS::Region"
                  },
                  ".",
                  {
                    "Ref": "AWS::URLSuffix"
                  },
                  "/dev"
                ]
              ]
            }
          },
          "WebAppCloudFrontDistributionOutput": {
            "Value": {
              "Fn::GetAtt": [
                "WebAppCloudFrontDistribution",
                "DomainName"
              ]
            }
          }
        }
      },
      "coreCloudFormationTemplate": {
        "AWSTemplateFormatVersion": "2010-09-09",
        "Description": "The AWS CloudFormation template for this Serverless application",
        "Resources": {
          "ServerlessDeploymentBucket": {
            "Type": "AWS::S3::Bucket",
            "Properties": {
              "BucketEncryption": {
                "ServerSideEncryptionConfiguration": [
                  {
                    "ServerSideEncryptionByDefault": {
                      "SSEAlgorithm": "AES256"
                    }
                  }
                ]
              }
            }
          },
          "ServerlessDeploymentBucketPolicy": {
            "Type": "AWS::S3::BucketPolicy",
            "Properties": {
              "Bucket": {
                "Ref": "ServerlessDeploymentBucket"
              },
              "PolicyDocument": {
                "Statement": [
                  {
                    "Action": "s3:*",
                    "Effect": "Deny",
                    "Principal": "*",
                    "Resource": [
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":s3:::",
                            {
                              "Ref": "ServerlessDeploymentBucket"
                            },
                            "/*"
                          ]
                        ]
                      }
                    ],
                    "Condition": {
                      "Bool": {
                        "aws:SecureTransport": false
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "Outputs": {
          "ServerlessDeploymentBucketName": {
            "Value": {
              "Ref": "ServerlessDeploymentBucket"
            }
          }
        }
      },
      "logs": {
        "restApi": {
          "format": "{\"requestTime\":\"$context.requestTime\",\"requestId\":\"$context.requestId\",\"apiId\":\"$context.apiId\",\"resourceId\":\"$context.resourceId\",\"resourcePath\":\"$context.resourcePath\",\"path\":\"$context.path\",\"httpMethod\":\"$context.httpMethod\",\"status\":\"$context.status\",\"authLatency\":\"$context.authorizer.integrationLatency\",\"integrationLatency\":\"$context.integrationLatency\",\"integrationStatus\":\"$context.integrationStatus\",\"responseLatency\":\"$context.responseLatency\",\"responseLength\":\"$context.responseLength\",\"errorMessage\":\"$context.error.message\",\"format\":\"SLS_ACCESS_LOG\",\"version\":\"1.0.0\"}"
        }
      },
      "vpc": {}
    },
    "custom": {
      "s3HomePage": "visitplannr-site-home"
    },
    "pluginsData": {},
    "functions": {
      "ProposeDestination": {
        "handler": "s_ProposeDestination.handler",
        "events": [
          {
            "http": {
              "path": "destination",
              "method": "post",
              "integration": "AWS_PROXY"
            }
          }
        ],
        "name": "visit-plannr-dev-ProposeDestination",
        "package": {},
        "memory": 512,
        "timeout": 10,
        "runtime": "nodejs12.x",
        "vpc": {},
        "versionLogicalId": "ProposeDestinationLambdaVersionyptfUaJcPzDGYNZjvGm9q1UleyY8VVZKViAvFAKKw"
      },
      "ValidateGeolocation": {
        "handler": "s_ValidateGeolocation.handler",
        "iamRoleStatements": [
          {
            "Effect": "Allow",
            "Action": [
              "dynamodb:PutItem"
            ],
            "Resource": {
              "Fn::GetAtt": [
                "EventsTable",
                "StreamArn"
              ]
            }
          }
        ],
        "events": [
          {
            "stream": {
              "type": "dynamodb",
              "arn": {
                "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"IamRoleLambdaExecution\"][\"Properties\"][\"Policies\"][0][\"PolicyDocument\"][\"Statement\"][4][\"Resource\"][0]"
              }
            }
          }
        ],
        "name": "visit-plannr-dev-ValidateGeolocation",
        "package": {},
        "memory": 512,
        "timeout": 10,
        "runtime": "nodejs12.x",
        "vpc": {},
        "versionLogicalId": "ValidateGeolocationLambdaVersionfF1nYRIdG6W6QhOvzDlepElLGR7J0PZowjltblxAA8"
      },
      "UpdateDestinationReadModel": {
        "handler": "s_UpdateDestinationReadModel.handler",
        "iamRoleStatements": [
          {
            "Effect": "Allow",
            "Action": [
              "dynamodb:PutItem"
            ],
            "Resource": {
              "Fn::GetAtt": [
                "ReadModelTable",
                "StreamArn"
              ]
            }
          },
          {
            "Effect": "Allow",
            "Action": [
              "dynamodb:Query"
            ],
            "Resource": {
              "Fn::GetAtt": [
                "EventsTable",
                "StreamArn"
              ]
            }
          }
        ],
        "events": [
          {
            "stream": {
              "type": "dynamodb",
              "arn": {
                "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"IamRoleLambdaExecution\"][\"Properties\"][\"Policies\"][0][\"PolicyDocument\"][\"Statement\"][5][\"Resource\"][0]"
              }
            }
          }
        ],
        "name": "visit-plannr-dev-UpdateDestinationReadModel",
        "package": {},
        "memory": 512,
        "timeout": 10,
        "runtime": "nodejs12.x",
        "vpc": {},
        "versionLogicalId": "UpdateDestinationReadModelLambdaVersionTOkheHPnvyWY69qgr1JnN4BP4D8XaiLzjtA3OUuDaI"
      },
      "HomePageGenerator": {
        "handler": "s_HomePageGenerator.handler",
        "iamRoleStatements": [
          {
            "Effect": "Allow",
            "Action": [
              "dynamodb:Query"
            ],
            "Resource": {
              "Fn::GetAtt": [
                "EventsTable",
                "StreamArn"
              ]
            }
          },
          {
            "Effect": "Allow",
            "Action": [
              "s3:PutObject",
              "s3:PutObjectACL"
            ],
            "Resource": {
              "Fn::GetAtt": [
                "EventsTable",
                "StreamArn"
              ]
            }
          }
        ],
        "events": [
          {
            "stream": {
              "type": "dynamodb",
              "arn": {
                "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"IamRoleLambdaExecution\"][\"Properties\"][\"Policies\"][0][\"PolicyDocument\"][\"Statement\"][6][\"Resource\"][0]"
              }
            }
          }
        ],
        "name": "visit-plannr-dev-HomePageGenerator",
        "package": {},
        "memory": 512,
        "timeout": 10,
        "runtime": "nodejs12.x",
        "vpc": {},
        "versionLogicalId": "HomePageGeneratorLambdaVersion1zSudBAFWdQJLBXLXWnAt6jrAPA9AXBZr7je1GfJvnA"
      },
      "CloudFrontInvalidating": {
        "handler": "s_CloudFrontInvalidating.handler",
        "events": [
          {
            "s3": {
              "bucket": "visitplannr-site-home",
              "event": "s3:ObjectCreated:*"
            }
          },
          {
            "s3": {
              "bucket": "visitplannr-site-home",
              "event": "s3:ObjectRemoved:*"
            }
          }
        ],
        "name": "visit-plannr-dev-CloudFrontInvalidating",
        "package": {},
        "memory": 512,
        "timeout": 10,
        "runtime": "nodejs12.x",
        "vpc": {},
        "versionLogicalId": "CloudFrontInvalidatingLambdaVersionklBOJVQtxBoYvWDWyPYwqPvPWdykPGIZsM0a9JtU2W0"
      }
    },
    "resources": {
      "Resources": {
        "EventsTable": {
          "Type": "AWS::DynamoDB::Table",
          "Properties": {
            "AttributeDefinitions": [
              {
                "AttributeName": "StreamName",
                "AttributeType": "S"
              },
              {
                "AttributeName": "timestamp",
                "AttributeType": "S"
              }
            ],
            "KeySchema": [
              {
                "AttributeName": "StreamName",
                "KeyType": "HASH"
              },
              {
                "AttributeName": "timestamp",
                "KeyType": "RANGE"
              }
            ],
            "BillingMode": "PAY_PER_REQUEST",
            "StreamSpecification": {
              "StreamViewType": "NEW_IMAGE"
            }
          }
        },
        "ReadModelTable": {
          "Type": "AWS::DynamoDB::Table",
          "Properties": {
            "AttributeDefinitions": [
              {
                "AttributeName": "type",
                "AttributeType": "S"
              },
              {
                "AttributeName": "timestamp",
                "AttributeType": "S"
              }
            ],
            "KeySchema": [
              {
                "AttributeName": "type",
                "KeyType": "HASH"
              },
              {
                "AttributeName": "timestamp",
                "KeyType": "RANGE"
              }
            ],
            "BillingMode": "PAY_PER_REQUEST",
            "StreamSpecification": {
              "StreamViewType": "NEW_IMAGE"
            }
          }
        },
        "S3HomeBucket": {
          "Type": "AWS::S3::Bucket",
          "Properties": {
            "AccessControl": "PublicRead",
            "BucketName": "visitplannr-site-home",
            "WebsiteConfiguration": {
              "IndexDocument": "index.html",
              "ErrorDocument": "index.html"
            }
          },
          "DeletionPolicy": "Retain"
        },
        "BucketPolicy": {
          "Type": "AWS::S3::BucketPolicy",
          "Properties": {
            "PolicyDocument": {
              "Id": "S3HomeBucketPolicy",
              "Version": "2012-10-17T00:00:00.000Z",
              "Statement": [
                {
                  "Sid": "PublicReadGetObject",
                  "Effect": "Allow",
                  "Principal": "*",
                  "Action": [
                    "s3:GetObject"
                  ],
                  "Resource": "arn:aws:s3:::visitplannr-site-home/*"
                }
              ]
            },
            "Bucket": {
              "Ref": "S3HomeBucket"
            }
          }
        },
        "WebAppCloudFrontDistribution": {
          "Type": "AWS::CloudFront::Distribution",
          "Properties": {
            "DistributionConfig": {
              "Origins": [
                {
                  "DomainName": "visitplannr-site-home.s3.amazonaws.com",
                  "Id": "WebApp",
                  "CustomOriginConfig": {
                    "HTTPPort": 80,
                    "HTTPSPort": 443,
                    "OriginProtocolPolicy": "https-only"
                  }
                }
              ],
              "Enabled": "true",
              "DefaultRootObject": "index.html",
              "CustomErrorResponses": [
                {
                  "ErrorCode": 404,
                  "ResponseCode": 200,
                  "ResponsePagePath": "/index.html"
                }
              ],
              "DefaultCacheBehavior": {
                "AllowedMethods": [
                  "GET",
                  "HEAD",
                  "OPTIONS"
                ],
                "TargetOriginId": "WebApp",
                "ForwardedValues": {
                  "QueryString": "false",
                  "Cookies": {
                    "Forward": "none"
                  }
                },
                "ViewerProtocolPolicy": "redirect-to-https"
              },
              "ViewerCertificate": {
                "CloudFrontDefaultCertificate": "true"
              }
            }
          }
        }
      },
      "Outputs": {
        "WebAppCloudFrontDistributionOutput": {
          "Value": {
            "Fn::GetAtt": [
              "WebAppCloudFrontDistribution",
              "DomainName"
            ]
          }
        }
      }
    },
    "serviceFilename": "serverless.yml",
    "app": "visit-plannr",
    "org": "pauldambra",
    "layers": {},
    "isDashboardMonitoringPreconfigured": true,
    "isDashboardAppPreconfigured": true,
    "appUid": "9Wwp3mDWlJHCGRtWwk",
    "orgUid": "SXBNJP59BmjtB5p3gb",
    "artifact": "/Users/DambPa/github/visit-plannr/.serverless/visit-plannr.zip"
  },
  "package": {
    "artifactDirectoryName": "serverless/visit-plannr/dev/1580683456370-2020-02-02T22:44:16.370Z",
    "artifact": "visit-plannr.zip"
  }
}