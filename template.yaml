AWSTemplateFormatVersion : '2010-09-09'
Transform: AWS::Serverless-2016-10-31

Description: |
  A location and weather aware day-trip planner

Resources:
  S3HomeBucket:
    Type: 'AWS::S3::Bucket'
    Properties:
      AccessControl: PublicRead
      BucketName: visitplannr-site-home
    DeletionPolicy: Retain
  BucketPolicy:
    Type: 'AWS::S3::BucketPolicy'
    Properties:
      PolicyDocument:
        Id: S3HomeBucketPolicy
        Version: 2012-10-17
        Statement:
          - Sid: PublicReadForGetBucketObjects
            Effect: Allow
            Principal: '*'
            Action: 's3:GetObject'
            Resource: !Join
              - ''
              - - 'arn:aws:s3:::'
                - !Ref S3HomeBucket
                - /*
      Bucket: !Ref S3HomeBucket
  BucketWritePolicy:
    Type: "AWS::IAM::ManagedPolicy"
    Properties:
      ManagedPolicyName: "visitplannr-s3-home-writers"
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          -
            Effect: "Allow"
            Action:
              - "s3:PutObject"
              - "s3:PutObjectACL"
            Resource: !Join
                - ''
                - - 'arn:aws:s3:::'
                  - !Ref S3HomeBucket
                  - /*
  homePageDistribution:
    Type: AWS::CloudFront::Distribution
    Properties:
      DistributionConfig:
        Origins:
        - DomainName: !Join [ "", [!Ref S3HomeBucket, ".s3.amazonaws.com"]]
          Id: myS3Origin
          S3OriginConfig:
            # ugh hard coded :(
            OriginAccessIdentity: origin-access-identity/cloudfront/EKUU25OW2EP4U
        Enabled: 'true'
        Comment: visit plannr static home page cdn
        DefaultRootObject: index.html
        Aliases:
        - visitplannr.info
        DefaultCacheBehavior:
          AllowedMethods:
          - GET
          - HEAD
          - OPTIONS
          TargetOriginId: myS3Origin
          ForwardedValues:
            QueryString: 'false'
            Cookies:
              Forward: none
          ViewerProtocolPolicy: allow-all
        PriceClass: PriceClass_100
        ViewerCertificate:
          CloudFrontDefaultCertificate: 'true'
  EventsTable:
    Type: "AWS::DynamoDB::Table"
    Properties:
      AttributeDefinitions:
        - AttributeName: StreamName
          AttributeType: S
        - AttributeName: timestamp
          AttributeType: S
      KeySchema:
        - AttributeName: StreamName
          KeyType: HASH
        - AttributeName: timestamp
          KeyType: RANGE
      ProvisionedThroughput:
        ReadCapacityUnits: 5
        WriteCapacityUnits: 5
      StreamSpecification:
        StreamViewType: NEW_IMAGE
  ReadModelTable:
    Type: "AWS::DynamoDB::Table"
    Properties:
      AttributeDefinitions:
        - AttributeName: type
          AttributeType: S
        - AttributeName: timestamp
          AttributeType: S
      KeySchema:
        - AttributeName: type
          KeyType: HASH
        - AttributeName: timestamp
          KeyType: RANGE
      ProvisionedThroughput:
        ReadCapacityUnits: 5
        WriteCapacityUnits: 5
      StreamSpecification:
        StreamViewType: NEW_IMAGE
  ProposeDestinationFunction:
    Type: AWS::Serverless::Function
    Properties:
      Runtime: nodejs8.10
      Handler: proposeDestination.handler
      Timeout: 10
      Policies:
        - AWSLambdaDynamoDBExecutionRole
        - Statement:
            - Effect: Allow
              Action:
                - 'dynamodb:PutItem'
              Resource: !Join
              - ''
              - - 'arn:aws:dynamodb:'
                - !Ref AWS::Region
                - ':'
                - !Ref AWS::AccountId
                - ':table/'
                - !Ref EventsTable
      Environment:
        Variables:
          EVENTS_TABLE: !Ref EventsTable
      Events:
        ProposeDestination:
          Type: Api
          Properties:
            Path: /destination
            Method: POST
  ValidateGeolocationFunction:
    Type: AWS::Serverless::Function
    Properties:
      Runtime: nodejs8.10
      Handler: validateGeolocation.handler
      Timeout: 10
      Policies:
        - AWSLambdaDynamoDBExecutionRole
        - Statement:
            - Effect: Allow
              Action:
                - 'dynamodb:PutItem'
              Resource: !Join
              - ''
              - - 'arn:aws:dynamodb:'
                - !Ref AWS::Region
                - ':'
                - !Ref AWS::AccountId
                - ':table/'
                - !Ref EventsTable
      Environment:
        Variables:
          EVENTS_TABLE: !Ref EventsTable
      Events:
        DyanmoEventStream:
          Type: DynamoDB
          Properties:
            StartingPosition: LATEST
            BatchSize: 1
            Stream: !GetAtt EventsTable.StreamArn
  UpdateDestinationReadModelFunction:
    Type: AWS::Serverless::Function
    Properties:
      Runtime: nodejs8.10
      Handler: updateDestinationReadModel.handler
      Timeout: 10
      Policies:
        - AWSLambdaDynamoDBExecutionRole
        - Statement:
            - Effect: Allow
              Action:
                - 'dynamodb:PutItem'
              Resource: !Join
              - ''
              - - 'arn:aws:dynamodb:'
                - !Ref AWS::Region
                - ':'
                - !Ref AWS::AccountId
                - ':table/'
                - !Ref ReadModelTable
        - Statement:
            - Effect: Allow
              Action:
                - 'dynamodb:Query'
              Resource: !Join
              - ''
              - - 'arn:aws:dynamodb:'
                - !Ref AWS::Region
                - ':'
                - !Ref AWS::AccountId
                - ':table/'
                - !Ref EventsTable
      Environment:
        Variables:
          EVENTS_TABLE: !Ref EventsTable
          READMODEL_TABLE: !Ref ReadModelTable
      Events:
        DyanmoEventStream:
          Type: DynamoDB
          Properties:
            StartingPosition: LATEST
            BatchSize: 1
            Stream: !GetAtt EventsTable.StreamArn
  HomePageGeneratorFunction:
    Type: AWS::Serverless::Function
    Properties:
      Runtime: nodejs8.10
      Handler: homePageGenerator.handler
      Timeout: 10
      Policies:
        - AWSLambdaDynamoDBExecutionRole
        - !Ref BucketWritePolicy
        - Statement:
            - Effect: Allow
              Action:
                - 'dynamodb:Query'
              Resource: !Join
              - ''
              - - 'arn:aws:dynamodb:'
                - !Ref AWS::Region
                - ':'
                - !Ref AWS::AccountId
                - ':table/'
                - !Ref ReadModelTable
      Environment:
        Variables:
          READMODEL_TABLE: !Ref ReadModelTable
      Events:
        DyanmoEventStream:
          Type: DynamoDB
          Properties:
            StartingPosition: LATEST
            BatchSize: 1
            Stream: !GetAtt ReadModelTable.StreamArn
