AWSTemplateFormatVersion : '2010-09-09'
Transform: AWS::Serverless-2016-10-31

Description: |
  Static Infrastructure for visit plannr

Resources:

  S3HomeBucket:
    Type: 'AWS::S3::Bucket'
    Properties:
      AccessControl: PublicRead
      BucketName: visitplannr-site-home
    DeletionPolicy: Retain

  BucketPolicy:
    Type: 'AWS::S3::BucketPolicy'
    Properties:
      PolicyDocument:
        Id: S3HomeBucketPolicy
        Version: 2012-10-17
        Statement:
          - Sid: PublicReadForGetBucketObjects
            Effect: Allow
            Principal: '*'
            Action: 's3:GetObject'
            Resource: !Join
              - ''
              - - 'arn:aws:s3:::'
                - !Ref S3HomeBucket
                - /*
      Bucket: !Ref S3HomeBucket

  cloudFrontIdParameter:
    Type: "AWS::SSM::Parameter"
    Properties:
      Name: visitPlannrCloudFrontIdParameter
      Description: the id for the cloud front visitplannr site distribution
      Type: String
      Value: !Ref homePageDistribution

  homePageDistribution:
    Type: AWS::CloudFront::Distribution
    Properties:
      DistributionConfig:
        Origins:
        - DomainName: !Join [ "", [!Ref S3HomeBucket, ".s3.amazonaws.com"]]
          Id: myS3Origin
          S3OriginConfig:
            # ugh hard coded :(
            OriginAccessIdentity: origin-access-identity/cloudfront/EKUU25OW2EP4U
        Enabled: true
        Comment: visit plannr static home page cdn
        DefaultRootObject: index.html
        Aliases:
        - visitplannr.info
        DefaultCacheBehavior:
          AllowedMethods:
          - GET
          - HEAD
          - OPTIONS
          TargetOriginId: myS3Origin
          ForwardedValues:
            QueryString: false
            Cookies:
              Forward: none
          ViewerProtocolPolicy: allow-all
        PriceClass: PriceClass_100
        ViewerCertificate:
          CloudFrontDefaultCertificate: true

  CloudfrontInvalidatingFunction:
    Type: AWS::Serverless::Function
    Properties:
      Runtime: nodejs8.10
      Handler: invalidateStaticFiles.handler
      Timeout: 60
      Policies:
        - AWSLambdaExecute
        - Statement:
            -
              Effect: Allow
              Action:
                - 'ssm:GetParameter*'
              Resource: !Sub 'arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/visitPlannrCloudFrontIdParameter*'
      Environment:
              Variables:
                PARAM_NAME: visitPlannrCloudFrontIdParameter
      Events:
        S3FileCreatedListener:
          Type: S3
          Properties:
            Bucket: !Ref S3HomeBucket
            Events: s3:ObjectCreated:*
        S3FileRemovedListener:
          Type: S3
          Properties:
            Bucket: !Ref S3HomeBucket
            Events: s3:ObjectRemoved:*

  CloudfrontFunctionPermissions:
      Type: "AWS::IAM::Policy"
      Properties:
          PolicyName: "CloudfrontCacheInvalidation"
          PolicyDocument:
              Version: "2012-10-17"
              Statement:
                  -
                      Effect: "Allow"
                      Action: "cloudfront:CreateInvalidation"
                      Resource: "*"
          Roles:
              - !Ref CloudfrontInvalidatingFunctionRole

Outputs:
  SiteBucketName:
    Description: the name of the s3 bucket referenced by cloudfront
    Value: !Ref S3HomeBucket
    Export:
      Name: visitplannr-site-home-bucket-name
  CloudFrontId:
    Description: the id of the cloudfront distribution for visitplannr
    Value: !Ref homePageDistribution
    Export:
      Name: visitplannr-site-cloudfront-distribution-id
